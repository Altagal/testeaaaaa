# Generated by Django 5.1.2 on 2024-11-11 11:40

import datetime
import django.contrib.auth.base_user
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Sobrenome')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='Senha')),
                ('last_login', models.DateTimeField(default=datetime.datetime.now, verbose_name='Ultimo login')),
                ('date_joined', models.DateTimeField(default=datetime.datetime.now, verbose_name='Data de criação')),
                ('is_active', models.BooleanField(default=False, verbose_name='Ativo')),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('can_manage_user', 'Pode gerenciar Usuarios e Grupos'), ('can_test_things', 'Pode testar essa coisa aqui')],
            },
            bases=(models.Model, django.contrib.auth.base_user.BaseUserManager),
        ),
    ]
